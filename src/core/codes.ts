const NUMBER_TYPES_INT8 = 0x00;
const NUMBER_TYPES_UINT8 = 0x01;
const NUMBER_TYPES_INT16 = 0x02;
const NUMBER_TYPES_UINT16 = 0x03;
const NUMBER_TYPES_INT32 = 0x04;
const NUMBER_TYPES_UINT32 = 0x05;
const NUMBER_TYPES_INT64 = 0x06;
const NUMBER_TYPES_UINT64 = 0x07;
const NUMBER_TYPES_FLOAT32 = 0x08;
const NUMBER_TYPES_FLOAT64 = 0x09;



const ANY_UNDEFINED = 0x00;
const ANY_NULL = 0x01;

const ANY_BOOLEAN = 0x02; // virtual type
const ANY_BOOLEAN_FALSE = ANY_BOOLEAN + 0x00;
const ANY_BOOLEAN_TRUE = ANY_BOOLEAN +  0x01;

const ANY_BOOLEAN_OBJECT = 0x04;  // virtual type
const ANY_BOOLEAN_OBJECT_FALSE = ANY_BOOLEAN_OBJECT +  + 0x00;
const ANY_BOOLEAN_OBJECT_TRUE = ANY_BOOLEAN_OBJECT + 0x01;

const ANY_NUMBER = 0x10; // virtual type
const ANY_NUMBER_INT8 = ANY_NUMBER + NUMBER_TYPES_INT8;
const ANY_NUMBER_UINT8 = ANY_NUMBER + NUMBER_TYPES_UINT8;
const ANY_NUMBER_INT16 = ANY_NUMBER + NUMBER_TYPES_INT16;
const ANY_NUMBER_UINT16 = ANY_NUMBER + NUMBER_TYPES_UINT16;
const ANY_NUMBER_INT32 = ANY_NUMBER + NUMBER_TYPES_INT32;
const ANY_NUMBER_UINT32 = ANY_NUMBER + NUMBER_TYPES_UINT32;
const ANY_NUMBER_INT64 = ANY_NUMBER + NUMBER_TYPES_INT64;
const ANY_NUMBER_UINT64 = ANY_NUMBER + NUMBER_TYPES_UINT64;
const ANY_NUMBER_FLOAT32 = ANY_NUMBER + NUMBER_TYPES_FLOAT32;
const ANY_NUMBER_FLOAT64 = ANY_NUMBER + NUMBER_TYPES_FLOAT64;

const ANY_NUMBER_OBJECT = 0x20; // virtual type
const ANY_NUMBER_OBJECT_INT8 = ANY_NUMBER_OBJECT + NUMBER_TYPES_INT8;
const ANY_NUMBER_OBJECT_UINT8 = ANY_NUMBER_OBJECT + NUMBER_TYPES_UINT8;
const ANY_NUMBER_OBJECT_INT16 = ANY_NUMBER_OBJECT + NUMBER_TYPES_INT16;
const ANY_NUMBER_OBJECT_UINT16 = ANY_NUMBER_OBJECT + NUMBER_TYPES_UINT16;
const ANY_NUMBER_OBJECT_INT32 = ANY_NUMBER_OBJECT + NUMBER_TYPES_INT32;
const ANY_NUMBER_OBJECT_UINT32 = ANY_NUMBER_OBJECT + NUMBER_TYPES_UINT32;
const ANY_NUMBER_OBJECT_INT64 = ANY_NUMBER_OBJECT + NUMBER_TYPES_INT64;
const ANY_NUMBER_OBJECT_UINT64 = ANY_NUMBER_OBJECT + NUMBER_TYPES_UINT64;
const ANY_NUMBER_OBJECT_FLOAT32 = ANY_NUMBER_OBJECT + NUMBER_TYPES_FLOAT32;
const ANY_NUMBER_OBJECT_FLOAT64 = ANY_NUMBER_OBJECT + NUMBER_TYPES_FLOAT64;

const ANY_BIGINT = 0x30;

const ANY_STRING = 0x32;
const ANY_STRING_OBJECT = 0x33;

const ANY_ARRAY_GENERIC = 0x36;
const ANY_ARRAY_TYPED = 0x37; // [ANY_ARRAY_TYPED, TYPE, ...SIZE, ...VALUES]

const ANY_OBJECT_GENERIC = 0x3a;
const ANY_OBJECT_TYPED = 0x3b; // [ANY_OBJECT_TYPED, INTERFACE INDEX (encoded as size), ...VALUES]

const ANY_MAP_GENERIC = 0x0e;
const ANY_MAP_TYPED = 0x0e; // [ANY_MAP_TYPED, KEY_TYPE, VALUE_TYPE ...[KEY, VALUE]]

const ANY_SET_GENERIC = 0x0f;
const ANY_SET_TYPED = 0x0f;

const ANY_ARRAY_BUFFER = 0x0c;
const ANY_SHARED_ARRAY_BUFFER = 0x0b;

const ANY_ARRAY_BUFFER_VIEW = 0x0d;

const ANY_DATE = 0x09;
const ANY_REGEXP = 0x0a;



const ANY_POINTER = 0x70;
/**
 * Represents the structure of an object:
 *  => list of property names and associated type
 *  - an object always map to an interface
 */
const INTERFACE = 0x71;
const TRANSFERABLE = 0x72;
